<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.jobhub.personal">
	<resultMap type="personalMemberDto" id="personalResultMap">
		<id column="PERSONAL_NUMBER" property="pNo" />
		<result column="PERSONAL_NAME" property="pName" />
		<result column="PERSONAL_ID" property="pId" />
		<result column="PERSONAL_PASSWORD" property="pPwd" />
		<result column="PERSONAL_PHONENUMBER" property="pPhoneNum" />
		<result column="PERSONAL_COMPANY" property="pCom" />
		<result column="PERSONAL_NICKNAME" property="pNickname" />
		<result column="PERSONAL_PROFILE" property="pProfile" />
		<result column="PERSONAL_EMAIL" property="pEmail" />
		<result column="PERSONAL_HIRE_DATE" property="pHireDate"
			javaType="java.util.Date" />
		<result column="PERSONAL_KEYWORD" property="pKeyword" />
		<result column="PERSONAL_TEMPORARILY" property="pTemporarily" />
		<result column="PERMISSION" property="pPermission" />
		<result column="PERSONAL_CREATE_DATE" property="pCreateDate" 
			javaType="java.util.Date" />
		<result column="PERSONAL_MODIFY_DATE" property="pModifyDate" 
			javaType="java.util.Date" />
		<result column="CONNECTION_TIME" property="pConnectionTime" 
			javaType="java.util.Date" />
		<result column="DISCONNECTION_TIME" property="pDisconnectionTime" 
			javaType="java.util.Date" />
	</resultMap>
	
	<resultMap type="resumeDto" id="resumeResultMap">
		<id column="RESUME_NUMBER" property="rNo" />
		<result column="RESUME_PERSONAL_NAME" property="rName"/>
		<result column="RESUME_PERSONAL_BIRTHDAY" property="rBirthday"/>
		<result column="RESUME_PERSONAL_EMAIL" property="rEmail"/>
		<result column="RESUME_PERSONAL_PHONENUMBER" property="rPhoneNum"/>
		<result column="RESUME_PERSONAL_ADDRESS" property="rAdd"/>
		<result column="RESUME_PERSONAL_MARRY" property="rMarry"/>
		<result column="RESUME_PERSONAL_GENDER" property="rGender"/>
		<result column="RESUME_PERSONAL_MILITARY" property="rMilitary"/>
		<result column="RESUME_EDUCATION_BEGIN_DATE" property="rEduBeginDate"/>
		<result column="RESUME_EDUCATION_END_DATE" property="rEduEndDate"/>
		<result column="RESUME_EDUCATION_NAME" property="rEduName"/>
		<result column="RESUME_EDUCATION_MAJOR" property="rEduMajor"/>
		<result column="RESUME_EDUCATION_LOCATION" property="rEduLoc"/>
		<result column="RESUME_EDUCATION_GRADE" property="rEduGrade"/>
		<result column="RESUME_EDUCATION_GRADUATE" property="rEduGraduate"/>
		<result column="RESUME_CAREER_BEGIN_DATE" property="rCareerBeginDate"/>
		<result column="RESUME_CAREER_END_DATE" property="rCareerEndDate"/>
		<result column="RESUME_CAREER_NAME" property="rCareerName"/>
		<result column="RESUME_CAREER_POSITION" property="rCareerPos"/>
		<result column="RESUME_CAREER_LOCATION" property="rCareerLoc"/>
		<result column="RESUME_CAREER_JOB" property="rCareerJob"/>
		<result column="RESUME_LICENSE_DATE" property="rLicenseDate"/>
		<result column="RESUME_LICENSE_NAME" property="rLicenseName"/>
		<result column="RESUME_LICENSE_INSTITUTION" property="rLicenseInst"/>
		<result column="RESUME_LICENSE_GRADE" property="rLicenseGrade"/>
		<result column="PERSONAL_NUMBER" property="pNo"/>
	</resultMap>
	
	<resultMap type="letterDto" id="letterResultMap">
		<id column="LETTER_NUMBER" property="lNo" />
		<result column="LETTER_HISTORY" property="history"/>
		<result column="LETTER_MOTIVATION" property="motivation"/>
		<result column="LETTER_CHARACTER" property="character"/>
		<result column="LETTER_GOAL" property="goal"/>
		<result column="PERSONAL_NUMBER" property="pNo"/>
	</resultMap>
	
	<select id="personalIdCheck">
		SELECT COUNT(PERSONAL_ID)
		FROM PERSONAL
		WHERE PERSONAL_ID = #{pId};
	</select>
	
	<select id="memberSelectList"  parameterType="map" resultMap="personalResultMap">
		SELECT PERSONAL.PERSONAL_NUMBER, PERSONAL.PERSONAL_NAME, PERSONAL.PERSONAL_ID
			, PERSONAL.PERSONAL_NICKNAME, PERSONAL.PERMISSION, PERSONAL.PERSONAL_CREATE_DATE
			, PERSONAL.PERSONAL_MODIFY_DATE
		FROM( SELECT ROWNUM AS RNUM, P.PERSONAL_NUMBER, P.PERSONAL_NAME, P.PERSONAL_ID
			, P.PERSONAL_NICKNAME, P.PERMISSION, P.PERSONAL_CREATE_DATE, P.PERSONAL_MODIFY_DATE
        		FROM( SELECT PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID,PERSONAL_NICKNAME
        			, PERMISSION, PERSONAL_CREATE_DATE, PERSONAL_MODIFY_DATE
                		FROM PERSONAL
                		ORDER BY PERSONAL_CREATE_DATE DESC
                	) P
			) PERSONAL
<!-- 		WHERE PERSONAL.RNUM BETWEEN #{start} AND #{end} -->
	</select>
	
	<select id="personalMemberSelectList" parameterType="map" resultMap="personalResultMap">
		SELECT PERSONAL.PERSONAL_NUMBER, PERSONAL.PERSONAL_NAME, PERSONAL.PERSONAL_ID
			, PERSONAL.PERSONAL_NICKNAME, PERSONAL.PERMISSION, PERSONAL.PERSONAL_CREATE_DATE
			, PERSONAL.PERSONAL_MODIFY_DATE
		FROM( SELECT ROWNUM AS RNUM, P.PERSONAL_NUMBER, P.PERSONAL_NAME, P.PERSONAL_ID
			, P.PERSONAL_NICKNAME, P.PERMISSION, P.PERSONAL_CREATE_DATE, P.PERSONAL_MODIFY_DATE
        		FROM( SELECT PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID,PERSONAL_NICKNAME
        			, PERMISSION, PERSONAL_CREATE_DATE, PERSONAL_MODIFY_DATE
                		FROM PERSONAL
                		ORDER BY PERSONAL_CREATE_DATE DESC
                	) P
			) PERSONAL
	</select>

	<select id="personalMemberExist" parameterType="map" resultMap="personalResultMap">
		SELECT  PERSONAL_NUMBER, PERSONAL_ID, PERSONAL_PASSWORD, PERSONAL_NICKNAME
			, PERSONAL_PHONENUMBER, PERSONAL_EMAIL, PERSONAL_KEYWORD, PERMISSION
		 FROM PERSONAL
		 WHERE PERSONAL_ID = #{pId} AND PERSONAL_PASSWORD = #{pPwd}
	
	</select>

	<insert id="personalInsertOne" parameterType="personalMemberDto">
<!-- 		useGeneratedKeys="true" keyProperty="pNo"> -->
<!-- 		<selectKey keyProperty="pNo" resultType="int" order="BEFORE"> -->
<!-- 			SELECT PERSONAL_NUMBER_SEQ.NEXTVAL -->
<!-- 			FROM DUAL -->
<!-- 		</selectKey> -->
		INSERT INTO PERSONAL
			VALUE(PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID
			    , PERSONAL_PASSWORD, PERSONAL_PHONENUMBER
			    , PERSONAL_COMPANY, PERSONAL_NICKNAME
			    , PERSONAL_PROFILE, PERSONAL_EMAIL
			    , PERSONAL_HIRE_DATE, PERSONAL_TEMPORARILY
			    , PERMISSION, PERSONAL_CREATE_DATE ,PERSONAL_MODIFY_DATE)
			VALUES(PERSONAL_NUMBER_SEQ.NEXTVAL, #{pName}, #{pId}
				, #{pPwd}, #{pPhoneNum}
				, #{pCom}, #{pNickname}
				, #{pProfile}, #{pEmail}
				, #{pHireDate}, #{pTemporarily}
				, 1, SYSDATE, SYSDATE)

<!-- 			INSERT INTO PERSONAL -->
<!-- 			VALUE(PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID -->
<!-- 			    , PERSONAL_PASSWORD, PERSONAL_PHONENUMBER, PERSONAL_EMAIL -->
<!-- 			    , PERMISSION, PERSONAL_CREATE_DATE ,PERSONAL_MODIFY_DATE -->
<!-- 			    , CONNECTION_TIME, DISCONNECTION_TIME) -->
<!-- 			VALUES(PERSONAL_NUMBER_SEQ.NEXTVAL, #{pName}, #{pId}, #{pPwd}, #{pPhoneNum} -->
<!-- 			, #{pEmail} , 1, SYSDATE, SYSDATE, SYSDATE, SYSDATE) -->
	</insert>
	
	<select id="personalMemberSearchId" parameterType="personalMemberDto" resultMap="personalResultMap">
		SELECT PERSONAL_ID
		FROM PERSONAL
		WHERE PERSONAL_NAME =#{pName} AND PERSONAL_EMAIL =#{pEmail}
	</select>
	
	<select id="personalMemberSearchPwd" parameterType="personalMemberDto" resultMap="personalResultMap">
		SELECT PERSONAL_PASSWORD
		FROM PERSONAL
		WHERE PERSONAL_NAME =#{pName} AND PERSONAL_EMAIL =#{pEmail} AND PERSONAL_ID =#{pId}
	</select>
	
	<update id="personalMemberNickNameUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_NICKNAME = #{pNickname, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{pNo}
	</update>
	
	<update id="personalMemberPasswordUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_PASSWORD = #{pPwd, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{pNo}
	</update>
	
	<update id="personalMemberPhoneNumUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_PHONENUMBER = #{pPhoneNum, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{pNo}
	</update>
	
	<update id="personalMemberEmailUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_EMAIL = #{pEmail, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{pNo}
	</update>
	
	<update id="personalMemberKeywordUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_KEYWORD = #{pKeyword, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{pNo}
	</update>
	
	<select id="personalInfoList" resultType="map">
		 SELECT P.PERSONAL_NUMBER AS "pNo", R.RESUME_PERSONAL_NAME AS "pName", P.PERSONAL_COMPANY AS "currentCompany"
	        , R.RESUME_EDUCATION_NAME AS "pHighestEdu" , R.RESUME_EDUCATION_MAJOR AS "pHighestEduMajor"
	        ,R.RESUME_EDUCATION_GRADE AS "pHighestEduGrade", R.RESUME_CAREER_NAME AS "pCampany"
	        , R.RESUME_CAREER_BEGIN_DATE AS "pCareerBeginDate"
	        , R.RESUME_CAREER_END_DATE AS "pCareerEndDate"
	        , NVL(R.RESUME_LICENSE_NAME , ' ') AS "pLicense"
	        , NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) AS "pLicenseCount" , P.COMPANY_PREFER AS "cPefer"
    	FROM (  SELECT P.PERSONAL_NUMBER, P.PERSONAL_COMPANY, C.COMPANY_PREFER
            FROM PERSONAL P , COMPANY C
            WHERE C.COMPANY_NUMBER = #{cNo}
            ) P INNER JOIN RESUME R
   		ON P.PERSONAL_NUMBER = R.PERSONAL_NUMBER
    <where>
<!--     	<if test="talentScore != null"></if> -->
<!--     	<if test="careerScore != null"></if> -->
    	<if test="educationScore != null">
    		<choose>
	    		<when test="educationScore == 1">
	    			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%고등학교']]>
	    		</when>
	    		<when test="educationScore == 2">
	    			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%전문대%'
    					AND R.RESUME_EDUCATION_NAME NOT LIKE '%대학교%']]>
	    		</when>
	    		<when test="educationScore == 3">
	    			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%대학교%']]>
	    		</when>
    		</choose>
    	</if>
    	<if test="educationScore != null and licenseScore != null">
    		 AND 
    	 </if>
    	<if test="licenseScore != null">
    		<choose>
	    		<when test="licenseScore == 1">
	    			<![CDATA[NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) <= 1]]>
	    		</when>
	    		<when test="licenseScore == 2">
	    			<![CDATA[NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) >= 1
	    			AND NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) <= 3]]>
	    		</when>
	    		<when test="licenseScore == 3">
	    			<![CDATA[NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) >= 3]]>
	    		</when>
    		</choose>
    	</if>
    	<if test="searchText != '' ">
    		<if test="talentScore != null or careerScore != null 
    			or educationScore != null or licenseScore != null">
    			AND
    		</if> 
					<!-- 둘다 사용가능 #은 ''를 붙혀준다, $는 문자열 그대로 인식한다. -->
<!--     			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%' || #{searchText} || '%']]> -->
    			<![CDATA[${search} LIKE '%${searchText}%']]>	
<!--     			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%서일%']]> -->
    	</if>
    </where>
	</select>
	<select id="personalMemberShowResume" resultMap="resumeResultMap" parameterType="map">
		SELECT RESUME_NUMBER, RESUME_PERSONAL_NAME, RESUME_PERSONAL_BIRTHDAY, RESUME_PERSONAL_EMAIL
    , RESUME_PERSONAL_PHONENUMBER, RESUME_PERSONAL_ADDRESS, RESUME_PERSONAL_MARRY
    , RESUME_PERSONAL_GENDER, RESUME_PERSONAL_MILITARY, RESUME_EDUCATION_BEGIN_DATE
    , RESUME_EDUCATION_END_DATE, RESUME_EDUCATION_NAME, RESUME_EDUCATION_MAJOR
    , RESUME_EDUCATION_LOCATION, RESUME_EDUCATION_GRADE, RESUME_EDUCATION_GRADUATE
    , RESUME_CAREER_BEGIN_DATE, RESUME_CAREER_END_DATE, RESUME_CAREER_NAME
    , RESUME_CAREER_POSITION, RESUME_CAREER_LOCATION, RESUME_CAREER_JOB, RESUME_LICENSE_DATE
    , RESUME_LICENSE_NAME, RESUME_LICENSE_INSTITUTION, RESUME_LICENSE_GRADE, PERSONAL_NUMBER
	FROM RESUME
		WHERE PERSONAL_NUMBER = #{pNo}
	</select>
	
	<select id="personalMembershowLetter" resultMap="letterResultMap" parameterType="map">
	SELECT LETTER_NUMBER, LETTER_HISTORY, LETTER_MOTIVATION
	    , LETTER_CHARACTER, LETTER_GOAL, (SELECT PERSONAL_NAME FROM PERSONAL WHERE PERSONAL_NUMBER = #{pNo}) AS "pName", PERSONAL_NUMBER
    FROM LETTER
	WHERE PERSONAL_NUMBER = #{pNo}
	</select>

	<update id="PersonalresumeUpdateOne" parameterType="resumeDto">
		UPDATE RESUME
		SET RESUME_PERSONAL_NAME = #{rName}
			, RESUME_PERSONAL_BIRTHDAY = #{rBirthday}
			, RESUME_PERSONAL_EMAIL = #{rEmail}
    		, RESUME_PERSONAL_PHONENUMBER = #{rPhoneNum}
    		, RESUME_PERSONAL_ADDRESS = #{rAdd}
    		, RESUME_PERSONAL_MARRY = #{rMarry}
    		, RESUME_PERSONAL_GENDER = #{rGender}
    		, RESUME_PERSONAL_MILITARY = #{rMilitary}
    		, RESUME_EDUCATION_BEGIN_DATE = #{rEduBeginDate}
		    , RESUME_EDUCATION_END_DATE = #{rEduEndDate}
		    , RESUME_EDUCATION_NAME = #{rEduName}
		    , RESUME_EDUCATION_MAJOR = #{rEduMajor}
		    , RESUME_EDUCATION_LOCATION = #{rEduLoc}
		    , RESUME_EDUCATION_GRADE = #{rEduGrade}
		    , RESUME_EDUCATION_GRADUATE = #{rEduGraduate}
		    , RESUME_CAREER_BEGIN_DATE = #{rCareerBeginDate}
		    , RESUME_CAREER_END_DATE = #{rCareerEndDate}
		    , RESUME_CAREER_NAME = #{rCareerName}
		    , RESUME_CAREER_POSITION = #{rCareerPos}
		    , RESUME_CAREER_LOCATION = #{rCareerLoc}
		    , RESUME_CAREER_JOB = #{rCareerJob}
		    , RESUME_LICENSE_DATE = #{rLicenseDate}
		    , RESUME_LICENSE_NAME = #{rLicenseName}
		    , RESUME_LICENSE_INSTITUTION = #{rLicenseInst}
		    , RESUME_LICENSE_GRADE = #{rLicenseGrade}
		WHERE PERSONAL_NUMBER = #{pNo}
	</update>

	<update id="PersonalLetterUpdateOne" parameterType="letterDto">
		UPDATE LETTER
		SET LETTER_HISTORY = #{history}
			, LETTER_MOTIVATION = #{motivation}
		    , LETTER_CHARACTER = #{character}
		    , LETTER_GOAL = #{goal}
		WHERE PERSONAL_NUMBER = #{pNo}
	</update>
	
	
</mapper>