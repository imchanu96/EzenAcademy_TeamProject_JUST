<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.jobhub.personal">
	<resultMap type="personalMemberDto" id="personalResultMap">
		<id column="PERSONAL_NUMBER" property="perNo" />
		<result column="PERSONAL_NAME" property="perName" />
		<result column="PERSONAL_ID" property="perId" />
		<result column="PERSONAL_PASSWORD" property="perPwd" />
		<result column="PERSONAL_PHONENUMBER" property="perPhoneNum" />
		<result column="PERSONAL_COMPANY" property="perCom" />
		<result column="PERSONAL_NICKNAME" property="perNickname" />
		<result column="PERSONAL_PROFILE" property="perProfile" />
		<result column="PERSONAL_EMAIL" property="perEmail" />
		<result column="PERSONAL_HIRE_DATE" property="perHireDate"
			javaType="java.util.Date" />
		<result column="PERSONAL_KEYWORD" property="perKeyword" />
		<result column="PERSONAL_TEMPORARILY" property="perTemporarily" />
		<result column="PERMISSION" property="perPermission" />
		<result column="PERSONAL_CREATE_DATE" property="perCreateDate" 
			javaType="java.util.Date" />
		<result column="PERSONAL_MODIFY_DATE" property="perModifyDate" 
			javaType="java.util.Date" />
		<result column="CONNECTION_TIME" property="perConnectionTime" 
			javaType="java.util.Date" />
		<result column="DISCONNECTION_TIME" property="perDisconnectionTime" 
			javaType="java.util.Date" />
	</resultMap>
	
	<resultMap type="resumeDto" id="resumeResultMap">
		<id column="RESUME_NUMBER" property="resumeNo" />
		<result column="RESUME_PERSONAL_NAME" property="resumeName"/>
		<result column="RESUME_PERSONAL_BIRTHDAY" property="resumeBirthday"/>
		<result column="RESUME_PERSONAL_EMAIL" property="resumeEmail"/>
		<result column="RESUME_PERSONAL_PHONENUMBER" property="resumePhoneNum"/>
		<result column="RESUME_PERSONAL_ADDRESS" property="resumeAdd"/>
		<result column="RESUME_PERSONAL_MARRY" property="resumeMarry"/>
		<result column="RESUME_PERSONAL_GENDER" property="resumeGender"/>
		<result column="RESUME_PERSONAL_MILITARY" property="resumeMilitary"/>
		<result column="RESUME_EDUCATION_BEGIN_DATE" property="resumeEduBeginDate"/>
		<result column="RESUME_EDUCATION_END_DATE" property="resumeEduEndDate"/>
		<result column="RESUME_EDUCATION_NAME" property="resumeEduName"/>
		<result column="RESUME_EDUCATION_MAJOR" property="resumeEduMajor"/>
		<result column="RESUME_EDUCATION_LOCATION" property="resumeEduLoc"/>
		<result column="RESUME_EDUCATION_GRADE" property="resumeEduGrade"/>
		<result column="RESUME_EDUCATION_GRADUATE" property="resumeEduGraduate"/>
		<result column="RESUME_CAREER_BEGIN_DATE" property="resumeCareerBeginDate"/>
		<result column="RESUME_CAREER_END_DATE" property="resumeCareerEndDate"/>
		<result column="RESUME_CAREER_NAME" property="resumeCareerName"/>
		<result column="RESUME_CAREER_POSITION" property="resumeCareerPos"/>
		<result column="RESUME_CAREER_LOCATION" property="resumeCareerLoc"/>
		<result column="RESUME_CAREER_JOB" property="resumeCareerJob"/>
		<result column="RESUME_LICENSE_DATE" property="resumeLicenseDate"/>
		<result column="RESUME_LICENSE_NAME" property="resumeLicenseName"/>
		<result column="RESUME_LICENSE_INSTITUTION" property="resumeLicenseInst"/>
		<result column="RESUME_LICENSE_GRADE" property="resumeLicenseGrade"/>
		<result column="PERSONAL_NUMBER" property="perNo"/>
	</resultMap>
	
	<resultMap type="letterDto" id="letterResultMap">
		<id column="LETTER_NUMBER" property="letterNo" />
		<result column="LETTER_HISTORY" property="history"/>
		<result column="LETTER_MOTIVATION" property="motivation"/>
		<result column="LETTER_CHARACTER" property="character"/>
		<result column="LETTER_GOAL" property="goal"/>
		<result column="PERSONAL_NUMBER" property="perNo"/>
	</resultMap>
	
	<resultMap type="careerDto" id="careerResultMap">
		<id column="CAREER_NUMBER" property="carNo" />
		<result column="CAREER_BEGIN_DATE" property="carBeginDate"/>
		<result column="CAREER_END_DATE" property="carEndDate"/>
		<result column="CAREER_NAME" property="carName"/>
		<result column="CAREER_POSITION" property="carPosition"/>
		<result column="CAREER_LOCATION" property="carLocation"/>
		<result column="CAREER_JOB" property="carJob"/>
		<result column="RESUME_NUMBER" property="resumeNo"/>
	</resultMap>
	
	<resultMap type="educationDto" id="educationResultMap">
		<id column="EDUCATION_NUMBER" property="eduNo" />
		<result column="EDUCATION_BEGIN_DATE" property="eduBeginDate"/>
		<result column="EDUCATION_END_DATE" property="eduEndDate"/>
		<result column="EDUCATION_NAME" property="eduName"/>
		<result column="EDUCATION_MAJOR" property="eduMajor"/>
		<result column="EDUCATION_GRADE" property="eduGrade"/>
		<result column="EDUCATION_LOCATION" property="eduLocation"/>
		<result column="EDUCATION_GREADUATE" property="eduGreaduate"/>
		<result column="RESUME_NUMBER" property="resumeNo"/>
	</resultMap>
	
	<select id="personalIdCheck">
		SELECT COUNT(PERSONAL_ID)
		FROM PERSONAL
		WHERE PERSONAL_ID = #{perId};
	</select>
	
	<select id="memberSelectList"  parameterType="map" resultMap="personalResultMap">
		SELECT PERSONAL.PERSONAL_NUMBER, PERSONAL.PERSONAL_NAME, PERSONAL.PERSONAL_ID
			, PERSONAL.PERSONAL_NICKNAME, PERSONAL.PERMISSION, PERSONAL.PERSONAL_CREATE_DATE
			, PERSONAL.PERSONAL_MODIFY_DATE
		FROM( SELECT ROWNUM AS RNUM, P.PERSONAL_NUMBER, P.PERSONAL_NAME, P.PERSONAL_ID
			, P.PERSONAL_NICKNAME, P.PERMISSION, P.PERSONAL_CREATE_DATE, P.PERSONAL_MODIFY_DATE
        		FROM( SELECT PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID,PERSONAL_NICKNAME
        			, PERMISSION, PERSONAL_CREATE_DATE, PERSONAL_MODIFY_DATE
                		FROM PERSONAL
                		ORDER BY PERSONAL_CREATE_DATE DESC
                	) P
			) PERSONAL
<!-- 		WHERE PERSONAL.RNUM BETWEEN #{start} AND #{end} -->
	</select>
	
	<select id="personalMemberSelectList" parameterType="map" resultMap="personalResultMap">
		SELECT PERSONAL.PERSONAL_NUMBER, PERSONAL.PERSONAL_NAME, PERSONAL.PERSONAL_ID
			, PERSONAL.PERSONAL_NICKNAME, PERSONAL.PERMISSION, PERSONAL.PERSONAL_CREATE_DATE
			, PERSONAL.PERSONAL_MODIFY_DATE
		FROM( SELECT ROWNUM AS RNUM, P.PERSONAL_NUMBER, P.PERSONAL_NAME, P.PERSONAL_ID
			, P.PERSONAL_NICKNAME, P.PERMISSION, P.PERSONAL_CREATE_DATE, P.PERSONAL_MODIFY_DATE
        		FROM( SELECT PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID,PERSONAL_NICKNAME
        			, PERMISSION, PERSONAL_CREATE_DATE, PERSONAL_MODIFY_DATE
                		FROM PERSONAL
                		ORDER BY PERSONAL_NUMBER
                	) P
			) PERSONAL
	</select>

	<select id="personalMemberExist" parameterType="map" resultMap="personalResultMap">
		SELECT  PERSONAL_NUMBER, PERSONAL_ID, PERSONAL_PASSWORD, PERSONAL_NICKNAME
			, PERSONAL_PHONENUMBER, PERSONAL_EMAIL, PERSONAL_KEYWORD, PERMISSION, PERSONAL_COMPANY
		 FROM PERSONAL
		 WHERE PERSONAL_ID = #{perId} AND PERSONAL_PASSWORD = #{perPwd}
	
	</select>

	<insert id="personalInsertOne" parameterType="personalMemberDto">
<!-- 		useGeneratedKeys="true" keyProperty="perNo"> -->
<!-- 		<selectKey keyProperty="perNo" resultType="int" order="BEFORE"> -->
<!-- 			SELECT PERSONAL_NUMBER_SEQ.NEXTVAL -->
<!-- 			FROM DUAL -->
<!-- 		</selectKey> -->
		INSERT INTO PERSONAL
			VALUE(PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID
			    , PERSONAL_PASSWORD, PERSONAL_PHONENUMBER
			    , PERSONAL_COMPANY, PERSONAL_NICKNAME
			    , PERSONAL_PROFILE, PERSONAL_EMAIL
			    , PERSONAL_HIRE_DATE, PERSONAL_TEMPORARILY
			    , PERMISSION, PERSONAL_CREATE_DATE ,PERSONAL_MODIFY_DATE)
			VALUES(PERSONAL_NUMBER_SEQ.NEXTVAL, #{perName}, #{perId}
				, #{perPwd}, #{perPhoneNum}
				, #{perCom}, #{perNickname}
				, #{perProfile}, #{perEmail}
				, #{perHireDate}, #{perTemporarily}
				, 1, SYSDATE, SYSDATE)

<!-- 			INSERT INTO PERSONAL -->
<!-- 			VALUE(PERSONAL_NUMBER, PERSONAL_NAME, PERSONAL_ID -->
<!-- 			    , PERSONAL_PASSWORD, PERSONAL_PHONENUMBER, PERSONAL_EMAIL -->
<!-- 			    , PERMISSION, PERSONAL_CREATE_DATE ,PERSONAL_MODIFY_DATE -->
<!-- 			    , CONNECTION_TIME, DISCONNECTION_TIME) -->
<!-- 			VALUES(PERSONAL_NUMBER_SEQ.NEXTVAL, #{pName}, #{pId}, #{pPwd}, #{pPhoneNum} -->
<!-- 			, #{pEmail} , 1, SYSDATE, SYSDATE, SYSDATE, SYSDATE) -->
	</insert>
	
	<select id="personalMemberSearchId" parameterType="personalMemberDto" resultMap="personalResultMap">
		SELECT PERSONAL_ID, PERSONAL_NAME
		FROM PERSONAL
		WHERE PERSONAL_NAME =#{perName} AND PERSONAL_EMAIL =#{perEmail}
	</select>
	
	<select id="personalMemberSearchPwd" parameterType="personalMemberDto" resultMap="personalResultMap">
		SELECT PERSONAL_PASSWORD, PERSONAL_NAME
		FROM PERSONAL
		WHERE PERSONAL_NAME =#{perName} AND PERSONAL_EMAIL =#{perEmail} AND PERSONAL_ID =#{perId}
	</select>
	
	<update id="personalMemberNickNameUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_NICKNAME = #{perNickname, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{perNo}
	</update>
	
	<update id="personalMemberPasswordUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_PASSWORD = #{perPwd, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{perNo}
	</update>
	
	<update id="personalMemberPhoneNumUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_PHONENUMBER = #{perPhoneNum, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{perNo}
	</update>
	
	<update id="personalMemberEmailUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_EMAIL = #{perEmail, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{perNo}
	</update>
	
	<update id="personalMemberKeywordUpdateOne" parameterType="personalMemberDto">
		UPDATE PERSONAL
		SET PERSONAL_KEYWORD = #{perKeyword, jdbcType=VARCHAR}
		WHERE PERSONAL_NUMBER = #{perNo}
	</update>
	
	<select id="personalInfoList" resultType="map">
		 SELECT P.PERSONAL_NUMBER AS "perNo", R.RESUME_PERSONAL_NAME AS "perName", P.PERSONAL_COMPANY AS "currentCompany"
	        , R.RESUME_EDUCATION_NAME AS "perHighestEdu" , R.RESUME_EDUCATION_MAJOR AS "perHighestEduMajor"
	        ,R.RESUME_EDUCATION_GRADE AS "perHighestEduGrade", R.RESUME_CAREER_NAME AS "perCampany"
	        , R.RESUME_CAREER_BEGIN_DATE AS "perCareerBeginDate"
	        , R.RESUME_CAREER_END_DATE AS "perCareerEndDate"
	        , NVL(R.RESUME_LICENSE_NAME , ' ') AS "perLicense"
	        , NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) AS "perLicenseCount" 
            , P.COMPANY_PREFER AS "comPrefer" , (SELECT RECOMMEND_TOTAL_RATE
                                                 FROM RECOMMEND
                                                 WHERE COMPANY_NUMBER = #{comNo}
                                                 AND PERSONAL_NUMBER = P.PERSONAL_NUMBER) AS "recommendTotalRate"
    	FROM (  SELECT P.PERSONAL_NUMBER, P.PERSONAL_COMPANY, C.COMPANY_PREFER
            FROM PERSONAL P , COMPANY C
            WHERE C.COMPANY_NUMBER = #{comNo}
            ) P INNER JOIN RESUME R
   		ON P.PERSONAL_NUMBER = R.PERSONAL_NUMBER
    <where>
<!--     	<if test="talentScore != null"></if> -->
<!--     	<if test="careerScore != null"></if> -->
    	<if test="educationScore != null">
    		<choose>
	    		<when test="educationScore == 1">
	    			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%고등학교']]>
	    		</when>
	    		<when test="educationScore == 2">
	    			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%전문대%'
    					AND R.RESUME_EDUCATION_NAME NOT LIKE '%대학교%']]>
	    		</when>
	    		<when test="educationScore == 3">
	    			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%대학교%']]>
	    		</when>
    		</choose>
    	</if>
    	<if test="educationScore != null and licenseScore != null">
    		 AND 
    	 </if>
    	<if test="licenseScore != null">
    		<choose>
	    		<when test="licenseScore == 1">
	    			<![CDATA[NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) <= 1]]>
	    		</when>
	    		<when test="licenseScore == 2">
	    			<![CDATA[NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) >= 1
	    			AND NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) <= 3]]>
	    		</when>
	    		<when test="licenseScore == 3">
	    			<![CDATA[NVL(REGEXP_COUNT(R.RESUME_LICENSE_NAME, ',')+1, 0) >= 3]]>
	    		</when>
    		</choose>
    	</if>
    	<if test="searchText != '' ">
    		<if test="talentScore != null or careerScore != null 
    			or educationScore != null or licenseScore != null">
    			AND
    		</if> 
					<!-- 둘다 사용가능 #은 ''를 붙혀준다, $는 문자열 그대로 인식한다. -->
<!--     			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%' || #{searchText} || '%']]> -->
    			<![CDATA[${search} LIKE '%${searchText}%']]>	
<!--     			<![CDATA[R.RESUME_EDUCATION_NAME LIKE '%서일%']]> -->
    	</if>
    </where>
	</select>
	<select id="personalMemberShowResume" resultMap="resumeResultMap" parameterType="map">
		SELECT RESUME_NUMBER, RESUME_PERSONAL_NAME, RESUME_PERSONAL_BIRTHDAY, RESUME_PERSONAL_EMAIL
    , RESUME_PERSONAL_PHONENUMBER, RESUME_PERSONAL_ADDRESS, RESUME_PERSONAL_MARRY
    , RESUME_PERSONAL_GENDER, RESUME_PERSONAL_MILITARY, RESUME_EDUCATION_BEGIN_DATE
    , RESUME_EDUCATION_END_DATE, RESUME_EDUCATION_NAME, RESUME_EDUCATION_MAJOR
    , RESUME_EDUCATION_LOCATION, RESUME_EDUCATION_GRADE, RESUME_EDUCATION_GRADUATE
    , RESUME_CAREER_BEGIN_DATE, RESUME_CAREER_END_DATE, RESUME_CAREER_NAME
    , RESUME_CAREER_POSITION, RESUME_CAREER_LOCATION, RESUME_CAREER_JOB, RESUME_LICENSE_DATE
    , RESUME_LICENSE_NAME, RESUME_LICENSE_INSTITUTION, RESUME_LICENSE_GRADE, PERSONAL_NUMBER
	FROM RESUME
		WHERE PERSONAL_NUMBER = #{perNo}
	</select>
	
	<select id="personalMemberShowCareer" parameterType="map" resultMap="careerResultMap">
		SELECT CAREER_NUMBER, CAREER_BEGIN_DATE, CAREER_END_DATE
			, CAREER_NAME, CAREER_POSITION, CAREER_LOCATION, CAREER_JOB, RESUME_NUMBER
		FROM CAREER
		WHERE RESUME_NUMBER = #{resumeNo}
	</select>
		
	<select id="personalMemberShowEducation" resultMap="educationResultMap" parameterType="map">
		SELECT EDUCATION_NUMBER, EDUCATION_BEGIN_DATE, EDUCATION_END_DATE
			, EDUCATION_NAME, EDUCATION_MAJOR, EDUCATION_GRADE, EDUCATION_LOCATION
			, EDUCATION_GREADUATE, RESUME_NUMBER
		FROM EDUCATION
		WHERE RESUME_NUMBER = #{resumeNo}
	</select>
	
	<select id="personalMembershowLetter" parameterType="map" resultType="map" >
	SELECT LETTER_NUMBER, LETTER_HISTORY, LETTER_MOTIVATION
	    , LETTER_CHARACTER, LETTER_GOAL
	    , (SELECT PERSONAL_NAME 
	    FROM PERSONAL 
	    WHERE PERSONAL_NUMBER = #{perNo}) AS "perName", PERSONAL_NUMBER
    FROM LETTER
	WHERE PERSONAL_NUMBER = #{perNo}
	</select>

	<update id="PersonalresumeUpdateOne" parameterType="resumeDto">
		UPDATE RESUME
		SET RESUME_PERSONAL_NAME = #{resumeName}
			, RESUME_PERSONAL_BIRTHDAY = #{resumeBirthday}
			, RESUME_PERSONAL_EMAIL = #{resumeEmail}
    		, RESUME_PERSONAL_PHONENUMBER = #{resumePhoneNum}
    		, RESUME_PERSONAL_ADDRESS = #{resumeAdd}
    		, RESUME_PERSONAL_MARRY = #{resumeMarry}
    		, RESUME_PERSONAL_GENDER = #{resumeGender}
    		, RESUME_PERSONAL_MILITARY = #{resumeMilitary}
    		, RESUME_EDUCATION_BEGIN_DATE = #{resumeEduBeginDate}
		    , RESUME_EDUCATION_END_DATE = #{resumeEduEndDate}
		    , RESUME_EDUCATION_NAME = #{resumeEduName}
		    , RESUME_EDUCATION_MAJOR = #{resumeEduMajor}
		    , RESUME_EDUCATION_LOCATION = #{resumeEduLoc}
		    , RESUME_EDUCATION_GRADE = #{resumeEduGrade}
		    , RESUME_EDUCATION_GRADUATE = #{resumeEduGraduate}
		    , RESUME_CAREER_BEGIN_DATE = #{resumeCareerBeginDate}
		    , RESUME_CAREER_END_DATE = #{resumeCareerEndDate}
		    , RESUME_CAREER_NAME = #{resumeCareerName}
		    , RESUME_CAREER_POSITION = #{resumeCareerPos}
		    , RESUME_CAREER_LOCATION = #{resumeCareerLoc}
		    , RESUME_CAREER_JOB = #{resumeCareerJob}
		    , RESUME_LICENSE_DATE = #{resumeLicenseDate}
		    , RESUME_LICENSE_NAME = #{resumeLicenseName}
		    , RESUME_LICENSE_INSTITUTION = #{resumeLicenseInst}
		    , RESUME_LICENSE_GRADE = #{resumeLicenseGrade}
		WHERE PERSONAL_NUMBER = #{perNo}
	</update>

	<update id="PersonalLetterUpdateOne" parameterType="letterDto">
		UPDATE LETTER
		SET LETTER_HISTORY = #{history}
			, LETTER_MOTIVATION = #{motivation}
		    , LETTER_CHARACTER = #{character}
		    , LETTER_GOAL = #{goal}
		WHERE PERSONAL_NUMBER = #{perNo}
	</update>
	
	<update id="personalMemberFindPwd">
		UPDATE PERSONAL
		SET PERSONAL_PASSWORD = #{perPwd}
		WHERE PERSONAL_EMAIL = #{perEmail}
		AND PERSONAL_ID = #{perId}
	</update>
	
	
</mapper>